DEPTH = 4096;
WIDTH = 32;
ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;
CONTENT
BEGIN
0000 : 00101010100000000000000000000000; -- addi $civilian1, $r0, 0		#$r10 = 0, target number of civilian 1

0001 : 00101010110000000000000000000001; -- addi $civilian2, $r0, 1		#$r11 = 1, target number of civilian 2

0002 : 00101011000000000000000000000010; -- addi $civilian3, $r0, 2		#$r12 = 2, target number of civilian 3

0003 : 00101101010000000000000000000011; -- addi $civilian4, $r0, 3		#$r21 = 3, target number of civilian 4

0004 : 00101011010000000000000001100100; -- addi $civilianscore, $r0, 100	#$r13 = 100, score to be subtracted if civilian hit

0005 : 00101011100000000000000011001000; -- addi $villainscore, $r0, 200	#$r14 = 200, score to be added if villain hit

0006 : 00101011110000000000000000000001; -- addi $one, $r0, 1		#$r15 = 1, often need to compare a reg to number 1

0007 : 00101100100000000000000111110100; -- addi $scoreincrement, $r0, 500	#$r18 = 500, every time the score threshold is met, it is incremented by 500

0008 : 00101101000000000000000000001010; -- addi $timermax, $r0, 10		#$r20 = 10, number of seconds targets are on with a score of 0

0009 : 00010000010111111111111111111111; -- 	bne $bp, $one, waitButton	#if button register ~= 1, branch back to waitButton

0010 : 00101100010000000000000111110100; -- 	addi $scorethreshold, $r0, 500	#$scorethreshold = 500, every 500 pts the time the targets stay live decreases

0011 : 00000010010000000000000000000000; -- 	add $score, $r0, $r0		#$score = 0

0012 : 00000100110000000000000000000000; -- 	add $timeoffset, $r0, $r0	#$timeroffset = 0, this is subtracted from the base time for how long targets stay active

0013 : 00101111010000000000000001111000; -- 	addi $r29, $r0, 120		#$r29 = 120, number of seconds the game will last

0014 : 11010111010000000000000000000000; -- 	timerc $r29			#starting game timer, currently 60 seconds long

0015 : 00011000000000000000000001001110; -- 	jal generaterand

0016 : 00000001000000010000000000000000; -- 	add $t0active, $r0, $rand		#set new target

0017 : 00000111011010010011000000000100; -- 	sub $r29, $timermax, $timeoffset	#calculating how long the target should be active for

0018 : 11000111010000000000000000000000; -- 	timera $r29

0019 : 00000000000000000000000000000000; -- 	nop

0020 : 00000000000000000000000000000000; -- 	nop

0021 : 00011000000000000000000001001110; -- 	jal generaterand

0022 : 00000001010000010000000000000000; -- 	add $t1active, $r0, $rand		#set new target

0023 : 00000111011010010011000000000100; -- 	sub $r29, $timermax, $timeoffset	#calculating how long the target should be active for

0024 : 00000111011110100010000000000100; -- 	sub $r29, $r29, 2			#initial timer for target 2 is two seconds shorter so that the targets are offset

0025 : 11001111010000000000000000000000; -- 	timerb $r29

0026 : 00000000000000000000000000000000; -- 	nop

0027 : 00000000000000000000000000000000; -- 	nop

0028 : 00010010000111111111111111101100; -- bne $gametimer, $one, waitButton

0029 : 00010000010000011111111111101100; -- bne $bp, $r0, start

0030 : 00010000100111100000000000001101; -- 		bne $t0hit, $one, checkhit2	#if target 0 isnt hit, branch to check target 1

0031 : 00101111010000000000000000000100; -- 		addi $r29, $r0, 4	#$r29 = 4

0032 : 00110001001110100000000000000010; -- 		blt $t0active, $r29, civilian1	#branching if it's a civilian

0033 : 00000010010100101110000000000000; -- 		add $score, $score, $villainscore

0034 : 00001000000000000000000000100101; -- 		j starttarget1	#skip score for civilian

0035 : 00110010010110100000000000000001; -- 		blt $score, $civilianscore, starttarget1	#if the score is less than what a civilian score would cost, branches to avoid -score

0036 : 00000010010100101101000000000100; -- 		sub $score, $score, $civilianscore

0037 : 00101101100000000000000000000001; -- 			addi $activetarget, $r0, 1	#setting target that will be staying active as target 1

0038 : 00011000000000000000000001001110; -- 			jal generaterand

0039 : 00000001000000010000000000000000; -- 			add $t0active, $r0, $rand		#set new target

0040 : 00000111011010010011000000000100; -- 			sub $r29, $timermax, $timeoffset	#calculating how long the target should be active for

0041 : 11000111010000000000000000000000; -- 			timera $r29

0042 : 00000000000000000000000000000000; -- 			nop

0043 : 00000000000000000000000000000000; -- 			nop

0044 : 00010000110111100000000000001101; -- 		bne $t1hit, $one, updatetimeoffset	#if target 1 isnt hit, branch to update time offset

0045 : 00101111010000000000000000000100; -- 		addi $r29, $r0, 4	#$r29 = 4

0046 : 00110001011110100000000000000010; -- 		blt $t1active, $r29, civilian2		#branch if hit target is civilian

0047 : 00000010010100101110000000000000; -- 		add $score, $score, $villainscore

0048 : 00001000000000000000000000110011; -- 		j starttarget2	#skip score for civilian

0049 : 00110010010110100000000000000001; -- 		blt $score, $civilianscore, starttarget2	#if the score is less than what a civilian score would cost, branches to avoid -score

0050 : 00000010010100101101000000000100; -- 		sub $score, $score, $civilianscore

0051 : 00101101100000000000000000000000; -- 			addi $activetarget, $r0, 0	#setting target that will be staying active as 0

0052 : 00011000000000000000000001001110; -- 			jal generaterand

0053 : 00000001010000010000000000000000; -- 			add $t1active, $r0, $rand		#set new target

0054 : 00000111011010010011000000000100; -- 			sub $r29, $timermax, $timeoffset	#calculating how long the target should be active for

0055 : 11001111010000000000000000000000; -- 			timerb $r29

0056 : 00000000000000000000000000000000; -- 			nop

0057 : 00000000000000000000000000000000; -- 			nop

0058 : 00110010011000100000000000000010; -- 		blt $score, $scorethreshold, timers		#branch if the score isnt greater than the threshold

0059 : 00000100011000110010000000000000; -- 		add $scorethreshold, $scorethreshold, $scoreincrement	#scorethreshold = scorethreshold + increment

0060 : 00000100111001101111000000000000; -- 		add $timeoffset, $timeoffset, $one		#timeoffset++

0061 : 00010001100000000000000000000111; -- 		bne $timer1, $r0, timer2	#if the timer isnt done, branch to timer 2

0062 : 00101101100000000000000000000001; -- 		addi $activetarget, $r0, 1	#setting target that is staying active as 1

0063 : 00011000000000000000000001001110; -- 		jal generaterand

0064 : 00000001000000010000000000000000; -- 		add $t0active, $r0, $rand		#set new target

0065 : 00000111011010010011000000000100; -- 		sub $r29, $timermax, $timeoffset	#calculating how long the target should be active for

0066 : 11000111010000000000000000000000; -- 		timera $r29

0067 : 00000000000000000000000000000000; -- 		nop

0068 : 00000000000000000000000000000000; -- 		nop

0069 : 00010001110000011111111111010110; -- 		bne $timer2, $r0, gameloop	#if timer isn't done, branch to the game loop

0070 : 00101101100000000000000000000000; -- 		addi $activetarget, $r0, 0	#setting target to stay active as 0

0071 : 00011000000000000000000001001110; -- 		jal generaterand

0072 : 00000001010000010000000000000000; -- 		add $t1active, $r0, $rand		#set new target

0073 : 00000111011010010011000000000100; -- 		sub $r29, $timermax, $timeoffset	#calculating how long the target should be active for

0074 : 11001111010000000000000000000000; -- 		timerb $r29

0075 : 00000000000000000000000000000000; -- 		nop

0076 : 00000000000000000000000000000000; -- 		nop

0077 : 00001000000000000000000000011100; -- j gameloop

0078 : 11011100000000000000000000000000; -- 	randn $rand

0079 : 00010100000010000000000000000001; -- 		bne $rand, $t0active, equalactive1	#if same as active target 1, generate new random number

0080 : 00001000000000000000000001001110; -- 		j generaterand

0081 : 00010100000010100000000000000001; -- 		bne $rand, $t1active, checkingcivilians	#if same as active target 2, generate new random number

0082 : 00001000000000000000000001001110; -- 		j generaterand

0083 : 00101111010000000000000000000100; -- 	addi $r29, $r0, 4	#$r29 = 4, used for blt checking if a target is a civilian

0084 : 00010101100000000000000000000010; -- 		bne $activetarget, $r0, active1		#if t0active is staying on, stay here and check active0 otherwise jump to check t1active

0085 : 00110001001110100000000000000011; -- 			blt $t0active, $r29, activecivilian	#if t0active is a civilian, jump to activecivilian, if its not, jump to end

0086 : 00001000000000000000000001011100; -- 				j endgeneraterand

0087 : 00110001011110100000000000000001; -- 		blt $t1active, $r29, activecivilian	#if active1 is a civilian, jump to active civilian, if it's not, jump to end

0088 : 00001000000000000000000001011100; -- 			j endgeneraterand

0089 : 00101111010000000000000000000100; -- 		addi $r29, $r0, 4	#$r29 = 4, used for blt checking if a target is a civilian

0090 : 00110100001110111111111111110011; -- 		blt $rand, $r29, generaterand	#if randn is a civilian, generate a new random number

0091 : 00001000000000000000000001011100; -- 			j endgeneraterand

0092 : 00100111110000000000000000000000; -- 		jr $ra

[0093..4095] : 00000000000000000000000000000000;
END;
